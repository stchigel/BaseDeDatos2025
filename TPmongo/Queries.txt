/*1*/
/*Hecho*/
/*2*/
db.Restaurante.insertMany([{
  "_id": 3,
  "nombre": "La Parrillita",
  "direccion": "Rivadavia 10234",
  "telefono": 1122334455,
  "horarios": {
    "apertura": 1100,
    "clausura": 2330
  },
  "menu": {
    "platos": [
      {
        "nombre": "Asado completo",
        "precio": 45000,
        "descripcion": "Costilla, vacío, chorizo y morcilla servidos con papas fritas",
        "observacion": "Puede provocar ganas de dormir después de comer",
        "categoria": "Pizzas",
        "aptitud": []
      },
      {
        "nombre": "Hamburguesa vegana doble",
        "precio": 22000,
        "descripcion": "Hamburguesa hecha de aire pero doble",
        "observacion": "Cocinar poco para mantener la mística",
        "categoria": "Hamburguesas",
        "aptitud": [
          "vegano"
        ]
      }
    ],
    "postres": [
      {
        "nombre": "Flan clásico",
        "precio": 7000,
        "descripcion": "Flan de huevo con dulce de leche",
        "observacion": "Puede venir con caramelo líquido o duro",
        "categoria": 0,
        "aptitud": []
      },
      {
        "nombre": "Cheesecake sin TACC y vegano",
        "precio": 25000,
        "descripcion": "Versión premium, con salsa de frutos rojos",
        "observacion": "ideal para celiacos y veganos",
        "categoria": 1,
        "aptitud": [
          "Sin TACC",
          "vegano"
        ]
      }
    ],
    "bebidas": [
      {
        "nombre": "Agua",
        "precio": 1,
        "descripcion": "Agua",
        "observacion": "Aguosa",
        "categoria": "Aguas",
        "aptitud": [
          "vegetariano",
          "Sin TACC",
          "vegano"
        ]
      },
      {
        "nombre": "CocaCola",
        "precio": 3.5,
        "descripcion": "Magnifica",
        "observacion": "Este producto contiene el mejor sabor de la historia",
        "categoria": "Gaseosa",
        "aptitud": []
      }
    ]
  },
  "promociones": [
    {
      "nombre": "Promo Parrilla para 2",
      "descuento": 20,
      "inicio": "2025-6-15",
      "fin": "2025-6-30"
    }
  ],
  "servicios": [
    "Parking",
    "Acceso silla de ruedas"
  ],
  "reseñas": [
    {
      "mail": "maria@gmail.com",
      "opinion": "La carne espectacular, la atención un 10",
      "estrellas": 5
    }
  ],
  "eventosespeciales": [
    {
      "nombre": "Festival de la Carne",
      "descripcion": "Un día entero para probar cortes especiales y vino libre",
      "horarios": {
        "apertura": 1200,
        "clausura": 2300
      },
      "fecha": "2025-7-9"
    }
  ],
  "metodospago": [
    "Tarjeta",
    "QR",
    "Efectivo"
  ]
},
{
  "_id": 4,
  "nombre": "Veggie House",
  "direccion": "Av. Corrientes 5050",
  "telefono": 1166778899,
  "horarios": {
    "apertura": 1000,
    "clausura": 2230
  },
  "menu": {
    "platos": [
      {
        "nombre": "Wrap de Falafel",
        "precio": 15000,
        "descripcion": "Falafel con vegetales frescos y salsa de yogur",
        "observacion": "Ideal para comer liviano",
        "categoria": "Hamburguesas",
        "aptitud": [
          "vegano"
        ]
      },
      {
        "nombre": "Pizza de Vegetales",
        "precio": 18000,
        "descripcion": "Pizza con base fina y mix de vegetales de estación",
        "observacion": "Puede contener algo de queso",
        "categoria": "Pizzas",
        "aptitud": []
      }
    ],
    "postres": [
      {
        "nombre": "Mousse de Palta",
        "precio": 12000,
        "descripcion": "Postre cremoso de palta con cacao",
        "observacion": "Sabor particular, no para todos",
        "categoria": 0,
        "aptitud": [
          "vegano"
        ]
      }
    ],
    "bebidas": [
      {
        "nombre": "Agua",
        "precio": 1,
        "descripcion": "Agua",
        "observacion": "Aguosa",
        "categoria": "Aguas",
        "aptitud": [
          "vegetariano",
          "Sin TACC",
          "vegano"
        ]
      },
      {
        "nombre": "CocaCola",
        "precio": 3.5,
        "descripcion": "Magnifica",
        "observacion": "Este producto contiene el mejor sabor de la historia",
        "categoria": "Gaseosa",
        "aptitud": []
      }
    ]
  },
  "promociones": [
    {
      "nombre": "Martes Veganos",
      "descuento": 15,
      "inicio": "2025-5-6",
      "fin": "2025-12-30"
    }
  ],
  "servicios": [
    "Parking",
    "Acceso silla de ruedas"
  ],
  "reseñas": [
    {
      "mail": "sofia@outlook.com",
      "opinion": "La mejor opción vegana de la ciudad",
      "estrellas": 4.8
    },
    {
      "mail": "marcos@gmail.com",
      "opinion": "Muy bueno pero caro",
      "estrellas": 3.9
    }
  ],
  "eventosespeciales": [
    {
      "nombre": "Noche Vegana",
      "descripcion": "Menú exclusivo de degustación para veganos",
      "horarios": {
        "apertura": 1900,
        "clausura": 2230
      },
      "fecha": "2025-10-1"
    }
  ],
  "metodospago": [
    "Tarjeta",
    "QR",
    "Efectivo"
  ]
}])
db.Restaurante.insertOne({
  "_id": 1,
  "nombre": "Spíritu Italiano",
  "direccion": "Alvarellos2344",
  "telefono": 1112341234,
  "horarios": {
    "apertura": 1200,
    "clausura": 2355
  },
  "menu": {
    "platos": [
      {
        "nombre": "Pizza napolitana",
        "precio": 20000000,
        "descripcion": "Piza con salsa de tomate, carne y arriba rayas medianamente grueso queso parmecciano",
        "observacion": "este plato puede llegar a darte: 2 ladrillos en las manos, 6 cafeteras, soledad con alguien al lado o 3 propiedades",
        "categoria": "Pizzas",
        "aptitud": []
      },
      {
        "nombre": "Hamburguesa vegana",
        "precio": 20000000,
        "descripcion": "Hamburguesa hecha de aire",
        "observacion": "Este producto contiene sustancias químicas que el estado de California reconoce como causantes de amnesia.",
        "categoria": "Hamburguesas",
        "aptitud": [
          "vegano"
        ]
      }
    ],
    "postres": [
      {
        "nombre": "Flan con palta",
        "precio": 20000000,
        "descripcion": "El peor flan de tu vida",
        "observacion": "mas feo que comer cemento",
        "categoria": 0,
        "aptitud": []
      },
      {
        "nombre": "Cheesecake sin TACC y vegano",
        "precio": 20000000,
        "descripcion": "Cheesecake pero en vez de masa tiene nada osea solo la crema",
        "observacion": "imaginate ser celiaco, palermitaneo de mierda",
        "categoria": 1,
        "aptitud": [
          "Sin TACC",
          "vegano"
        ]
      }
    ],
    "bebidas": [
      {
        "nombre": "Agua",
        "precio": 1,
        "descripcion": "Agua",
        "observacion": "Aguosa",
        "categoria": "Aguas",
        "aptitud": [
          "vegetariano",
          "Sin TACC",
          "vegano"
        ]
      },
      {
        "nombre": "CocaCola",
        "precio": 3.5,
        "descripcion": "Magnifica",
        "observacion": "Este producto contiene el mejor sabor de la historia",
        "categoria": "Gaseosa",
        "aptitud": []
      }
    ]
  },
  "promociones": [
    {
      "nombre": "Descuento del 40% en Agua",
      "descuento": 40,
      "inicio": "2025-4-20",
      "fin": "2025-4-21"
    },
    {
      "nombre": "2% de Cashback si compras lo mas caro",
      "descuento": 2,
      "inicio": "2025-9-20",
      "fin": "2045-11-21"
    }
  ],
  "servicios": [
    "Parking",
    "Acceso silla de ruedas"
  ],
  "reseñas": [
    {
      "mail": "juanperez@gmail.com",
      "opinion": "Buen serivico, pero el flan con palta me hizo vomitar 8 veces",
      "estrellas": 3.5
    },
    {
      "mail": "benja@hotmail.com",
      "opinion": "Me encanto el flan con palta, lo mejor de todo",
      "estrellas": 5
    }
  ],
  "eventosespeciales": [
    {
      "nombre": "Degustaciones",
      "descripcion": "Un evento para probar los mejores sabores y platillos en el mundo",
      "horarios": {
        "apertura": 1200,
        "clausura": 2300
      },
      "fecha": "2020-1-1"
    },
    {
      "nombre": "Noche la dinastia",
      "descripcion": "Un evento para todos aquellos integrates y fans de la Coscu Army y la dinastia ",
      "horarios": {
        "apertura": 2000,
        "clausura": 2200
      },
      "fecha": "2010-1-1"
    }
  ],
  "metodospago": [
    "Tarjeta",
    "QR",
    "Efectivo"
  ]
})
/*despues cambiamos a ISODate*/

/*3*/
db.Restaurante.count()
db.Restaurante.countDocuments()
/*4*/ 
db.Restaurante.find({{"menu.platos.aptitud": "vegano"}, {"menu.platos.aptitud" : "pet-friendly"}, {servicios: "delivery"}}, {nombre: 1}).sort({nombre: 1})
/*5*/ /*PREGUNTAR*/
db.Restaurante.updateMany({}, {$set: {ultima_actualizacion: new Date()}})
/*6*/
db.Restaurante.find({"promociones.descuento": 10}, {nombre: 1})
/*7*/
db.Restaurante.find({"promociones.nombre": "jubilados"}, {nombre: 1})
/*8*/
db.Restaurante.updateMany({$or:[{servicios: "delivery"}, {servicios: "reservas online"}]}, {$set: {"horarios.apertura": 1130}, $set: {ultima_actualizacion: new Date()}})
/*9*/
db.Restaurante.find({"eventosespeciales.nombre" : "Musica en vivo"},{nombre: 1, direccion: 1, telefono: 1})
/*10*/
db.Restaurante.updateOne({_id: 3}, {$push: {promociones: {"nombre": "MEGA PROMO EN AGUA", "descuento": 41, "inicio": ISODate("2025-09-10"), "fin": ISODate("2025-10-10")}}, $set: {ultima_actualizacion: new Date()}})
/*11*/
db.Restaurante.find({promociones: {$elemMatch: {inicio: {$lt: ISODate()}, fin: {$gt: ISODate()}}}},{nombre: 1, servicios: 1, menu: 1}).sort({promociones.descuento: -1}).limit(1)
/*12*/
db.Restaurante.find({$or:[{"promociones.nombre": "jubilados"}, {"promociones.nombre": "estudiantes"}]}, {})
/*13*/
db.Restaurante.find({promociones: {$elemMatch: {descuento: { $gt: 20 },inicio: { $lt: ISODate() },fin: { $gt: ISODate() }}}, servicios: "delivery",servicios: "reservas online"}, { nombre: 1, direccion: 1, telefono: 1 })
/*14*/
db.Restaurante.find({"promociones": {$size : 0}}, {nombre: 1, direccion: 1, telefono: 1})
/*15*/
db.Restaurante.find({_id: 2}, {reseñas: 1})
/*16*/
db.Restaurante.find({$expr: { $gte: [ { $size: "$promociones" }, 3 ] }}, {nombre: 1, direccion: 1, telefono: 1})
/*17*/
/*El operador $elemMatch te devuelve los documentos que, en un array especifico, tengan un elemento que cumpla con todas las condiciones*/
db.Restaurante.find({promociones: {$elemMatch: {inicio: { $lt: ISODate() },fin: { $gt: ISODate() }}}}, {})
/*18*/
db.Restaurante.find({"menu.platos.aptitud": "Sin TACC"}, {nombre: 1, direccion: 1, telefono: 1})
/*19*/
db.Restaurante.find({promociones: {$not: {$elemMatch: {$or: [{inicio: {$gt: ISODate()}}, {fin: { $lte: ISODate()}}]}}}}, { nombre: 1, direccion: 1, telefono: 1 })
/*20*/ 
db.Restaurante.deleteMany( { $or: [ { menu: { $exists: false } }, { menu: null } ] })
/*21*/
/*$inc*/
db.Restaurante.updateMany({"horarios.apertura": { $gt: 1200 }}, {$inc: {"horarios.apertura": -100}, $set: {ultima_actualizacion: new Date()}})
/*$max*/
db.Restaurante.updateMany({}, {$max: {"horarios.apertura": 1200}, $set: {ultima_actualizacion: new Date()}})
/*$mul*/
db.Restaurante.updateMany({"_id": { $gt: 4 }}, {$mul: {"_id": 10}, $set: {ultima_actualizacion: new Date()}})
/*$rename*/
db.Restaurante.updateMany({ "eventosespeciales": { $ne: null } }, { $rename: {"eventosespeciales": "eventos"}, $set: {ultima_actualizacion: new Date()}})
db.Restaurante.updateMany({ "eventos": { $ne: null } }, { $rename: {"eventos": "eventosespeciales"}, $set: {ultima_actualizacion: new Date()}})
/*$unset*/
db.Restaurante.updateMany({ _id: 1 }, { $unset: {ultima_actualizacion: ""}, $set: {ultima_actualizacion: new Date()}})
/*$pop*/
db.Restaurante.updateOne( { _id: 2 }, { $pop: { reseñas: 1 }, $set: {ultima_actualizacion: new Date()}})
/*$pull*/
db.Restaurante.updateMany({_id: 3},{ $pull: { servicios: { $in: [ "Parking"] }, metodospago: "QR" }, $set: {ultima_actualizacion: new Date()}})
/*$push*/
db.Restaurante.updateMany({_id: { $lt: 3 }}, {$push: {promociones: {
      "nombre": "Promo Restaurantes primeros",
      "descuento": 20,
      "inicio": ISODate("2025-11-01"),
      "fin": ISODate("2025-12-31")}}, $set: {ultima_actualizacion: new Date()}})
/*22*/
/*Exportar*/
mongoexport --db <nombre_base> --collection <nombre_coleccion> --out <archivo.json> --jsonArray
mongoexport --db PedidosYa --collection Restaurante --out Restaurante.json --jsonArray
/*Importar*/
mongoimport --db <nombre_base> --collection <nombre_coleccion> --file <archivo.json> --jsonArray
mongoimport --db PedidosYa --collection Restaurante --file Restaurante.json --jsonArray